/* eslint-disable */

function calcResistance(distExtra, distMax) {
  return Math.min(1, distExtra / distMax / 2) * Math.min(distMax, distExtra)
}

function touchStart(e, ins) {
  var dataset = e.instance.getDataset()
  var state = e.instance.getState()
  state.platform = dataset.platform
  state.distMax = dataset.distMax
  state.iconDist = dataset.iconDist
  state.iconDist = dataset.iconDist
  state.distThreshold = state.distMax * 0.75
  state.reachTop = dataset.reachTop
  state.status = state.status || "pending" // pending、pulling、releasing、refreshing
  if (state.status === "pending" && state.reachTop) {
    state.startPulling = true
    state.pullStartX = e.touches[0].clientX
    state.pullStartY = e.touches[0].clientY
    state.distance = 0

    state.iconWrapper = state.iconWrapper || ins.selectComponent(".icon-wrapper")
    state.icon = state.icon || ins.selectComponent(".icon")
    state.wrapper = state.wrapper || ins.selectComponent(".wrapper")

    state.iconWrapper.removeClass("transition")
    state.icon.removeClass("animation")
    state.iconWrapper.removeClass("fadeout")

    if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
      state.wrapper.removeClass("transition")
      state.wrapper.setStyle({
        top: state.distance + 'px',
        // transform: 'translateY(' + state.distance + 'px)',
        // "-webkit-transform": 'translateY(' + state.distance + 'px)'
      })
    }
  }
}

function touchMove(e, ins) {
  var state = e.instance.getState()

  if (!state.startPulling || state.status === "refreshing") {
    return true
  }
  state.pullMoveX = e.touches[0].clientX
  state.pullMoveY = e.touches[0].clientY
  if (state.status === "pending") {
    state.status = "pulling"
  }
  var distExtraX = state.pullMoveX - state.pullStartX
  var distExtraY = state.pullMoveY - state.pullStartY
  if (distExtraY > 0 && Math.abs(distExtraY) >= Math.abs(distExtraX)) {
    state.distance = calcResistance(distExtraY, state.distMax)

    if (state.status === "pulling" && state.distance > state.distThreshold) {
      state.status = "releasing"
      state.releasingTime = Date.now()
      state.iconWrapper.addClass('transition')
      state.iconWrapper.setStyle({
        // top: (state.iconDist - 32) + 'px',
        transform: 'translateY(' + state.iconDist + 'px)',
        "-webkit-transform": 'translateY(' + state.iconDist + 'px)'
      })
      ins.callMethod('vibrateShort')
    }
    if (state.status === "releasing" && state.distance < state.distThreshold) {
      state.status = "pulling"
      state.iconWrapper.removeClass('transition')
      state.iconWrapper.setStyle({
        // top: '-32px',
        transform: 'translateY(-32px)',
        "-webkit-transform": 'translateY(-32px)'
      })
    } else if (state.status === "releasing" && state.distance > state.distThreshold) {
      if (state.releasingTime && (Date.now() - 300) > state.releasingTime) {
        state.iconWrapper.removeClass('transition')
        state.icon.removeClass('transition')
      }
      state.iconWrapper.setStyle({
        // top: (state.iconDist - 32) + 'px',
        transform: 'translateY(' + state.iconDist + 'px)',
        "-webkit-transform": 'translateY(' + state.iconDist + 'px)'
      })
      state.icon.setStyle({
        transform: 'rotate(' + distExtraY / state.distThreshold / 2 * 360 + 'deg)',
        '-webkit-transform': 'rotate(' + distExtraY / state.distThreshold / 2 * 360 + 'deg)'
      })
    }
    if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
      state.wrapper.removeClass('transition')
      state.wrapper.setStyle({
        top: state.distance + 'px',
        // transform: 'translateY(' + state.distance + 'px)',
        // "-webkit-transform": 'translateY(' + state.distance + 'px)'
      })
      return false
    }
  }
  return true
}

function touchEnd(e, ins) {
  var state = e.instance.getState()
  if (!state.startPulling || state.status === "refreshing") {
    return
  }
  state.startPulling = false
  if (state.status === "releasing" && state.distance > state.distThreshold) {
    state.status = "refreshing"
    state.distance = state.distThreshold
    state.icon.addClass("animation")
    state.iconWrapper.setStyle({
      // top: state.iconDist + 'px',
      transform: 'translateY(' + state.iconDist + 'px)',
      "-webkit-transform": 'translateY(' + state.iconDist + 'px)'
    })
    if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
      state.wrapper.addClass('transition')
      state.wrapper.setStyle({
        top: '0px',
        // transform: 'translateY(' + state.distance + 'px)',
        // "-webkit-transform": 'translateY(' + state.distance + 'px)'
      })
    }

    ins.triggerEvent("refresh")
  } else {
    reset(state)
  }
}

function reset(state) {
  state.status = "pending"
  state.startPulling = false
  state.distance = 0
  state.iconWrapper.removeClass("transition")
  state.iconWrapper.setStyle({
    // top: '-32px',
    transform: 'translateY(-32px)',
    "-webkit-transform": 'translateY(-32px)'
  })

  if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
    state.wrapper.addClass('transition')
    state.wrapper.setStyle({
      top: state.distance + 'px',
      // transform: 'translateY(' + state.distance + 'px)',
      // "-webkit-transform": 'translateY(' + state.distance + 'px)'
    })
  }
}

function onRefreshed(newValue, oldValue, ins, itemIns) {
  if (newValue) {
    var state = itemIns.getState()
    state.status = "pending"
    state.startPulling = false
    
    var wrapper = state.wrapper || ins.selectComponent(".wrapper")
    var iconWrapper = state.iconWrapper || ins.selectComponent(".icon-wrapper")
    var icon = state.icon || ins.selectComponent(".icon")
    icon.removeClass("animation")
    iconWrapper.addClass("transition")
    iconWrapper.addClass("fadeout")
    iconWrapper.setStyle({
      // top: '-32px',
      transform: 'translateY(-32px)',
      "-webkit-transform": 'translateY(-32px)'
    })

    if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
      wrapper.addClass('transition')
      wrapper.setStyle({
        top: '0px',
        // transform: 'translateY(0)',
        // "-webkit-transform": 'translateY(0)'
      })
    }
  }
}

function onRefreshing(newValue, oldValue, ins, itemIns) {
  if (newValue) {
    var dataset = itemIns.getDataset()
    var state = itemIns.getState()
    state.distMax = state.distMax || dataset.distMax
    state.iconDist = state.iconDist || dataset.iconDist
    state.distThreshold = state.distThreshold || state.distMax * 0.75

    state.status = "refreshing"
    state.distance = state.distThreshold
    state.startPulling = false
    
    state.wrapper = state.wrapper || ins.selectComponent(".wrapper")
    state.iconWrapper = state.iconWrapper || ins.selectComponent(".icon-wrapper")
    state.icon = state.icon || ins.selectComponent(".icon")
    
    state.iconWrapper.removeClass("fadeout")
    state.iconWrapper.addClass("transition")
    state.icon.addClass("animation")
    state.iconWrapper.setStyle({
      // top: state.iconDist + 'px',
      transform: 'translateY(' + state.iconDist + 'px)',
    "-webkit-transform": 'translateY(' + state.iconDist + 'px)'
    })
    if (state.platform === 'android' || state.platform === 'devtools') { // 安卓或开发工具
      state.wrapper.addClass('transition')
      state.wrapper.setStyle({
        top: state.distance + 'px',
        // transform: 'translateY(' + state.distance + 'px)',
        // "-webkit-transform": 'translateY(' + state.distance + 'px)'
      })
    }

    ins.triggerEvent("refresh")
  }
}

module.exports = {
  touchStart: touchStart,
  touchMove: touchMove,
  touchEnd: touchEnd,
  onRefreshed: onRefreshed,
  onRefreshing: onRefreshing,
}
/* eslint-enable */
