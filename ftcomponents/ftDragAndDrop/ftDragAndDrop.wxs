/* eslint-disable */
function longPress(e, ins) {
  var dataset = e.instance.getDataset()
  var state = e.instance.getState()
  var index = dataset.index
  var rects = dataset.rects
  var wrapper = ins.selectComponent('.wrapper')
  var wrapperState = wrapper.getState()
  var wrapperDataset = wrapper.getDataset()
  state.ele = ins.selectComponent('.item' + index)

  if (wrapperDataset.disablemove || !state.ele) {
    return true
  }

  ins.callMethod('vibrateShort')
  state.ele.addClass('actived')
  wrapperState.startPulling = true
  state.oldSort = state.sort === 0 ? state.sort : (state.sort || index)
  state.sort = state.sort === 0 ? state.sort : (state.sort || index)
  state.pullStartY = e.touches[0].clientY
  state.distance = 0
  state.y = state.y || 0
  wrapperState.sortArea = []
  if (!wrapperState.moveInfo) {
    wrapperState.moveInfo = rects.map(function (item, idx) {
      return {
        disY: 0,
        rect: item,
        sort: idx,
        index: idx
      }
    })
  }
  wrapperState.moveInfo.forEach(function (item, idx) {
    if (idx === 0) {
      var top = 0
      var nextTop = item.rect.height
      var height = item.rect.height
      var nextHeight = wrapperState.moveInfo[idx + 1].rect.height
      wrapperState.sortArea.push({up: [-99999, top + height / 2], down: [top + height / 2, nextTop + nextHeight / 2]})
    } else if (idx === wrapperState.moveInfo.length - 1) {
      var preTop = 0
      var top = 0
      var preHeight = wrapperState.moveInfo[idx - 1].rect.height
      var height = item.rect.height
      for (var i = 0; i < idx; i++) {
        if (i < idx - 1) {
          preTop += wrapperState.moveInfo[i].rect.height
        }
        top += wrapperState.moveInfo[i].rect.height
      }
      wrapperState.sortArea.push({up: [preTop + preHeight / 2, top + height / 2], down: [top + height / 2, 99999]})
    } else {
      var preHeight = wrapperState.moveInfo[idx - 1].rect.height
      var height = item.rect.height
      var nextHeight = wrapperState.moveInfo[idx + 1].rect.height
      var preTop = 0
      var top = 0
      var nextTop = 0
      
      for (var i = 0; i < idx; i++) {
        if (i < idx - 1) {
          preTop += wrapperState.moveInfo[i].rect.height
        }
        top += wrapperState.moveInfo[i].rect.height
      }
      nextTop = top + height
      wrapperState.sortArea.push({up: [preTop + preHeight / 2, top + height / 2], down: [top + height / 2, nextTop + nextHeight / 2]})
    }
  })
}

function touchMove(e, ins) {
  var state = e.instance.getState()
  var wrapper = ins.selectComponent('.wrapper')
  var wrapperState = wrapper.getState()
  var wrapperDataset = wrapper.getDataset()
  if (wrapperDataset.disablemove || !wrapperState.startPulling || !state.ele) {
    return true
  }
  state.pullMoveY = e.touches[0].clientY
  state.distance = state.pullMoveY - state.pullStartY
  state.ele.setStyle({
    transform: 'translate3d(0, ' + (state.distance + state.y) + 'px, 0)',
    "-webkit-transform": 'translate3d(0, ' + (state.distance + state.y) + 'px, 0)'
  })
  var area = wrapperState.sortArea.map(function (item) {
    return state.distance > 0 ? item.down : item.up
  })
  var newSort = null
  var pos = state.distance > 0 ? (state.distance + wrapperState.sortArea[state.oldSort].down[0] + wrapperState.moveInfo[state.oldSort].rect.height / 2) : (state.distance + wrapperState.sortArea[state.oldSort].up[1] - wrapperState.moveInfo[state.oldSort].rect.height / 2)
  var newPos = area.filter(function(item, idx) {
    if (pos > item[0] && pos < item[1] && idx !== state.sort) {
      newSort = idx
      return true
    }
  })
  if (newSort !== null && newSort !== state.sort) { // 如果存在新的位置，则表示已经滑动到别的模块位置
    state.sort = newSort

    var arr = wrapperState.moveInfo.filter(function (item, idx) {
      return idx !== state.oldSort
    })
    arr.splice(state.sort, 0, wrapperState.moveInfo[state.oldSort])
    arr.forEach(function (item, idx) {
      item.sort = idx
      var calDis = 0
      for(var i = 0; i < arr.length; i++) {
        if (i < idx) {
          calDis += arr[i].rect.height
        }
      }
      item.disY = calDis - item.rect.top
      if (idx !== state.sort) {
        ins.selectComponent('.item' + item.index).setStyle({
          transform: 'translate3d(0, ' + item.disY + 'px, 0)',
          "-webkit-transform": 'translate3d(0, ' + item.disY + 'px, 0)'
        })
      }
    })
    wrapperState._moveInfo = arr
  }
  return false
}

function touchEnd(e, ins) {
  var state = e.instance.getState()
  state.ele.removeClass('actived')
  var wrapper = ins.selectComponent('.wrapper')
  var wrapperState = wrapper.getState()
  wrapperState.startPulling = false
  wrapperState.moveInfo = wrapperState._moveInfo
  var sortArr = []
  wrapperState.moveInfo.forEach(function (item, idx) {
    sortArr.push(item.index)
    var btnState = ins.selectComponent('.drag-btn' + item.index).getState()
    btnState.sort = item.sort
    btnState.y = item.disY
    ins.selectComponent('.item' + item.index).setStyle({
      transform: 'translate3d(0, ' + item.disY + 'px, 0)',
      "-webkit-transform": 'translate3d(0, ' + item.disY + 'px, 0)'
    })
  })
  ins.callMethod('sortChange', sortArr)
}

module.exports = {
  longPress: longPress,
  touchMove: touchMove,
  touchEnd: touchEnd
}
/* eslint-enable */